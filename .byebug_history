c
@orders.count
Date.today
c
orders
c
current_user.orders.find_or_initialize_by(order_params)
params
c
params
c
@order.id
@order.present?
@order = current_user.orders.find_or_initialize_by(order_params)
current_user.orders.find_or_initialize_by(order_params)
order_params
c
 self.order.products
c
@order.products
c
@items.all
@items.all.map
item.product
@products
@order.products
c
self.order.products
self.order
c
redirect_to(session.url , :allow_other_host=> true)
redirect_to(session.url)
session.url
session
c
items.first.product.price_id
c
resource
c
items.first.product.price_id
items.first
items
c
n
c
params
c
params
c
@items.all.ids
@items.all
@items
c
params
c
@items
@item
params
c
params
c
Stripe::Price.create(unit_amount: product.discount_price.to_i, currency: 'inr', product: @product.id)
@product = Stripe::Product.create(name: "#{product.product_name}")
Stripe::Price.create(unit_amount: product.discount_price.to_i, currency: 'inr', product: @product.id)
product
Stripe::Price.create(unit_amount: product.discount_price, currency: 'inr', product: @product.id)
@product.id
@product = Stripe::Product.create(name: "#{product.product_name}")
c
user
c
Stripe::Charge.create
c
client.messages.create
client.messages
client
c
self.user.phone_number
self.user
self
c
message
c
message
n
message
n
message
@client
n
c
@message
n
client = Twilio::REST::Client.new
c
n
client = Twilio::REST::Client.new
c
client.api.account.messages.create.errors
client.api.account.messages.create
client.api.account.messages
ENV['TWILIO_PHONE_NUMBER']
client
c
client.messages.create()
client.messages.create('7489856288')
client.messages.create({to: '7489856288'})
 client.messages.create
c
client.messages.createc
client.messages.create
client.messages
client
c
@items = current_user.cart.line_items.where(product_id: params[:id])
@items = current_user.line_items.where(product_id: params[:id])
LineItem.all
LineItem.where(id: params[:id])
params[:id]
params
@items
c
LineItem.where(id: params[:item_id])
params
@items
c
current_user.cart.line_items
params[:item_id].to_i.eql?(0)
c
params[:item_id].to_i.eql?(0)
params
c
@shipment.nil?
@shipment
c
Order.where("status != ?",2)
Order.statuses
Order.where("status != ?","cancel")
Order.all
Order.first.status
Order.first
@orders = current_user.orders.where("status != ?", "cancel")
@orders
c
resource.save
resource.discount_price =  resource.offer_types.present? ? @price - (@price * resource.offer_types.first.discount_percent.to_i)/100 : @price
c
resource.offer_types.first.discount_percent.to_i
resource.offer_types.first.discount_percent.class
resource.offer_types.first.discount_percent
resource.discount_price =  resource.offer_types.present? ? @price - (@price * resource.offer_types.first.discount_percent)/100 : @price
@price
c
self.save
self.discount_price =  self.offer_types.present? ? @price - (@price * self.offer_types.first.discount_percent)/100 : @price
@price
self.offer_types.present?
@price = self.discount.present? ? self.price - (self.price * self.discount.discount_amount)/100 : self.price
self.price
self.discount.present?
c
params
c
user
self
params
c
params[:id]
params
c
@address.errors
@address.save.errors
@address.save
@address = current_user.addresses.new(address_params)
params
c
key
obj.tracking_order.where(status: key)
obj.tracking_order
c
self.order.products.first.user.addresses.first
self.order.products.first.user.addresses
self.order.products.first.user
self.order.products.first
self.order.products
self.order
self
c
self.order.products
self.order
self
c
params[:id]
LineItem.where(id: params[:id])
LineItem.all
LineItem.where(id: params[:id])
params
params[:item_id].to_i.eql?(0)
c
params[:item_id].to_i.eql?(0) 
params[:item_id].to_i
params[:item_id]
params[:value].present?
@items
c
params[:id]
params[:id].to_i.eql?(0)
current_user.cart.line_items
params[:value].present?
@items
c
@items
@items = current_user.cart.line_items.create(quantity: 1, product_id: params[:id]).to_a if params[:value].present?
@items
c
@items
c
params
c
@items = LineItem.where(id: params[:order][:item_id].split)
c
params
@items = LineItem.where(id: params[:item_id].split)
c
@items = LineItems.where(id: params[:item_id].split)
c
a.size
a.split
a = "1"
a.split.size
a.split
a = "1 2"
"1 2"
params[:order][:item_id].split
params[:order][:item_id].spli
params[:order][:item_id]
params
c
params[:order][:item_id].to_i
params[:order][:item_id]
params
c
params
c
params[:id].to_i
params[:id].to_a
params[:id]
params
c
params
c
params[:id].to_i
params[:id]
params
c
current_user
