c
@order.save
@order
c
a = @order.save!
a = @order.save
@order.save.errors
@order.save
@order.products
@order.errors
@order.erors
@order
c
params
c
params
c
params
c
ProductSize.where(variant_id: params[:id])
ProductSize.all
ProdcutSize.all
params
c
params
c
params
c
params
c
params
params[:product][:product_colors_attributes]['0']['color']
params[:product][:product_colors_attributes]['0']
params[:product][:product_colors_attributes].parameters
params[:product][:product_colors_attributes].params
params[:product][:product_colors_attributes]
params[:product][:product_colors_attributes][:params]
params
params[:product][:product_colors_attributes]
c = params[:product][:product_colors_attributes]params[:product][:product_colors_attributes]
c = params[:product][:product_colors_attributes].to_h
c = params[:product][:product_colors_attributes]
c
resource.product_sizes.find_or_create_by(size: params[:product][:product_sizes_attributes]['0'][:size], variant_id: resource.variant_id)
params
resource.variant_id
resource.product_sizes.new
resource.product_sizes
params[:product][:product_sizes_attributes]['0'][:size]
c
params
c
resource
c
params
c
f.has_many :product_sizes
f.has_many "product_sizes"
f
f.has_many
c
resource.product_sizes
resource
c
resource.product_colors
resource.product_sizes
resource
c
resource
c
resource.product_colors
resource.product_sizes
resource
params
c
 resource.product_colors.create(color: params[:product][:product_colors_attributes]['0'][:color])
params[:product][:product_colors_attributes]['0'][:color]
params[:product][:product_colors_attributes]['0']
params[:product][:product_colors_attributes]
params[:product]
params
c
params[:product][:product_colors_attributes]
params[:product][:product_colors_attributes].to_json
params[:product][:product_colors_attributes].to_JSON
params[:product][:product_colors_attributes].to_h
params[:product][:product_colors_attributes].to_s
params[:product][:product_colors_attributes].to_a
params[:product][:product_colors_attributes][1]
params[:product][:product_colors_attributes]
params[:product][:product_colors_attributes][:color]
params[:product][:product_colors_attributes]
params[:product][:product_colors_attributes][0]
params[:product][:product_colors_attributes]
params[:product][:product_colors_attributes][0]
params[:product][:product_colors_attributes][:0]
params[:product][:product_colors_attributes]
params[:product]
resource
params
params[:product_colors_attributes]
params[product_colors_attributes]
params[:color]
params[:product_colors_attributes]
params[:product_colors_attributes][0][:color]
params[:product_colors_attributes][:0][:color]
params
resource
c
pdf.render_file('show.html.erb')
pdf.render_file('show.html')
pdf.render_file('show.pdf')
pdf
c
@shipment
c
@shipment.nil?
@shipment
 Order.find_by(track_id: params[:query]).shipment
Order.find_by(track_id: params[:query]).present?
c
@order = Order.where(id: params[:order_id])
c
@orders.count
Date.today
c
orders
c
current_user.orders.find_or_initialize_by(order_params)
params
c
params
c
@order.id
@order.present?
@order = current_user.orders.find_or_initialize_by(order_params)
current_user.orders.find_or_initialize_by(order_params)
order_params
c
 self.order.products
c
@order.products
c
@items.all
@items.all.map
item.product
@products
@order.products
c
self.order.products
self.order
c
redirect_to(session.url , :allow_other_host=> true)
redirect_to(session.url)
session.url
session
c
items.first.product.price_id
c
resource
c
items.first.product.price_id
items.first
items
c
n
c
params
c
params
c
@items.all.ids
@items.all
@items
c
params
c
@items
@item
params
c
params
c
Stripe::Price.create(unit_amount: product.discount_price.to_i, currency: 'inr', product: @product.id)
@product = Stripe::Product.create(name: "#{product.product_name}")
Stripe::Price.create(unit_amount: product.discount_price.to_i, currency: 'inr', product: @product.id)
product
Stripe::Price.create(unit_amount: product.discount_price, currency: 'inr', product: @product.id)
@product.id
@product = Stripe::Product.create(name: "#{product.product_name}")
c
user
c
Stripe::Charge.create
c
client.messages.create
client.messages
client
c
self.user.phone_number
self.user
self
c
message
c
message
n
message
n
message
@client
n
c
@message
n
client = Twilio::REST::Client.new
c
n
client = Twilio::REST::Client.new
c
client.api.account.messages.create.errors
client.api.account.messages.create
client.api.account.messages
ENV['TWILIO_PHONE_NUMBER']
client
c
client.messages.create()
client.messages.create('7489856288')
client.messages.create({to: '7489856288'})
 client.messages.create
c
client.messages.createc
client.messages.create
client.messages
client
c
@items = current_user.cart.line_items.where(product_id: params[:id])
@items = current_user.line_items.where(product_id: params[:id])
LineItem.all
LineItem.where(id: params[:id])
params[:id]
params
@items
c
LineItem.where(id: params[:item_id])
params
@items
c
current_user.cart.line_items
params[:item_id].to_i.eql?(0)
c
params[:item_id].to_i.eql?(0)
params
c
@shipment.nil?
@shipment
